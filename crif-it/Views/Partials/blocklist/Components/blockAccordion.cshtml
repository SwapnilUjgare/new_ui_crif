@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockListItem>;
@using ContentModels = Crif.It.Models;
@using System;
@using System.Text.RegularExpressions;
@{
	ContentModels.BlockAccordion content = (ContentModels.BlockAccordion)Model.Content;
	ContentModels.BlockAccordionSettings settings = (ContentModels.BlockAccordionSettings)Model.Settings;
	var layout = (settings != null && settings.IsFullwidth) ? "" : "col-lg-8";
	var firstOpen = settings.FirstOpen;
	var accordionID = settings?.AccordionID != "" ? settings?.AccordionID : null;
}
<section class="details-accordion" id="@settings?.AnchorID">
	<div class="container-lg">
		<div class="row justify-content-center">
			<div class="col-12 @layout">
				@if (content.TitoloAccordion != "")
				{
					<h1 class="h2 text-center mb-4">@content.TitoloAccordion</h1>
				}
				<div class="accordion" id="details">
					@if (content.AccordionItemList != null && content.AccordionItemList.Any())
					{
						var counter = 1;
						foreach (var item in content.AccordionItemList)
						{
							ContentModels.BlockAccordionItem itemContent = (ContentModels.BlockAccordionItem)item.Content;
							//var expandable = counter == 1 ? "true" : "false";
							bool ancora = (bool)Umbraco.AssignedContentItem.Url().ToString().Contains("#" + @itemContent?.AccordionAnchor) ? true : false;
							var showable = (firstOpen && counter == 1) || ancora ? "show" : "collapse";
							var iconShow = (firstOpen && counter == 1) || ancora ? "" : "collapsed";
							var ariaExpanded = (firstOpen && counter == 1) || ancora ? true : false;
							<div class="accordion-item" id="@itemContent?.AccordionAnchor">
								<h2 class="h4 accordion-header" id="heading-@accordionID-@counter">
									<button class="accordion-button @iconShow" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@accordionID-@counter" aria-expanded="@ariaExpanded" aria-controls="collapse-@accordionID-@counter">
										@itemContent?.AccordionTopic
									</button>
								</h2>
								<div id="collapse-@accordionID-@counter" class="accordion-collapse collapse @showable" aria-labelledby="heading-@accordionID-@counter" data-bs-parent="#details">
									@if (itemContent != null && itemContent.Offices != null && itemContent.Offices.Any())
									{
										<div class="accordion-body d-flex flex-wrap">
											@foreach (var office in itemContent.Offices)
											{
												var listContent = (ContentModels.BlockOffice)office.Content;

												<div class="office">
													<h3 class="h3">@listContent.Department</h3>
													@*<p>@listContent.FullAddress</p>
														<p>@listContent.PhoneAndFax</p>*@
													<p>@Html.Raw(listContent.FullAddress)</p>
													<p>@Html.Raw(listContent.PhoneAndFax)</p>
													@if (!string.IsNullOrEmpty(listContent.EMail))
													{
														<a title="@listContent.EMail" href="#" class="email">@listContent.EMail</a>
													}
												</div>
											}
										</div>
									} else
									{
										<div class="accordion-body">
											@Html.Raw(itemContent?.AccordionDescription)
										</div>
									}


								</div>
							</div>
							counter++;
						}
					}
				</div>
			</div>
		</div>
	</div>
</section>

<script type="text/javascript">
	window.onload = function() {
		var ancoraggio = window.location.href.split('#').pop();
		if (ancoraggio != "") {
			var domanda = document.getElementById(ancoraggio);
			if (domanda != null) {
				var accordionItems = document.querySelectorAll(".accordion-item")
				accordionItems.forEach(item => {
					if(!item.querySelector(".accordion-button").classList.contains("collapsed") && item.getAttribute("id") != ancoraggio){
						item.querySelector(".accordion-button").classList.add("collapsed")
						item.querySelector(".accordion-collapse").classList.add("collapse")
						item.querySelector(".accordion-collapse").classList.remove("show")
					}
				})
				domanda.querySelector(".accordion-button").classList.remove("collapsed");
				domanda.querySelector(".accordion-collapse").classList.remove("collapse");
				domanda.querySelector(".accordion-collapse").classList.add("show");
			}
		}
	}
</script>
<script>
	$('.accordion-item').click(function(){
		$('.accordion-item').not(this).each(function(){
			$(this).children('.accordion-header').children('.accordion-button').addClass("collapsed")
			$(this).children('.accordion-collapse').addClass("collapse")
			$(this).children('.accordion-collapse').removeClass("show")
		})
		if (!$(this).children('.accordion-collapse').hasClass("show")) {
			$([document.documentElement, document.body]).animate({
				scrollTop: $(this).offset().top - 90
			}, 50);
		}
	})
</script>

<script type="application/ld+json">
	{
	"@@context": "https://schema.org",
	"@@type": "FAQPage",
	"mainEntity": [
	@for (int i = 0; i < content.AccordionItemList.Count; i++)
	{
		ContentModels.BlockAccordionItem itemContent = (ContentModels.BlockAccordionItem)content.AccordionItemList[i].Content;
		string? rteContent = itemContent.Value<string>("AccordionDescription");
		if( i == content.AccordionItemList.Count - 1)
		{
			<text>
									{
							"@@type": "Question",
							"name": "@itemContent.AccordionTopic",
							"acceptedAnswer": {
							"@@type": "Answer",
							"text": "@Regex.Replace(rteContent, "<.*?>", String.Empty)"
							}
							}
			</text>
		} else
		{
			<text>
									{
							"@@type": "Question",
							"name": "@itemContent.AccordionTopic",
							"acceptedAnswer": {
							"@@type": "Answer",
							"text": "@Regex.Replace(rteContent, "<.*?>", String.Empty)"
							}
							},
			</text>
		}
	}
	]
	}
</script>